<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bawei.mapper.AttendanceMapper" >
  <resultMap id="BaseResultMap" type="com.bawei.pojo.Attendance" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="sign_in" property="signIn" jdbcType="TIMESTAMP" />
    <result column="sign_out" property="signOut" jdbcType="TIMESTAMP" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, sign_in, sign_out, ip
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bawei.pojo.AttendanceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attendance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from attendance
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from attendance
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bawei.pojo.AttendanceExample" >
    delete from attendance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bawei.pojo.Attendance" >
    insert into attendance (id, user_id, sign_in, 
      sign_out, ip)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{signIn,jdbcType=TIMESTAMP}, 
      #{signOut,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bawei.pojo.Attendance" >
    insert into attendance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="signIn != null" >
        sign_in,
      </if>
      <if test="signOut != null" >
        sign_out,
      </if>
      <if test="ip != null" >
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="signIn != null" >
        #{signIn,jdbcType=TIMESTAMP},
      </if>
      <if test="signOut != null" >
        #{signOut,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bawei.pojo.AttendanceExample" resultType="java.lang.Integer" >
    select count(*) from attendance
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update attendance
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.signIn != null" >
        sign_in = #{record.signIn,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signOut != null" >
        sign_out = #{record.signOut,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update attendance
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      sign_in = #{record.signIn,jdbcType=TIMESTAMP},
      sign_out = #{record.signOut,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bawei.pojo.Attendance" >
    update attendance
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="signIn != null" >
        sign_in = #{signIn,jdbcType=TIMESTAMP},
      </if>
      <if test="signOut != null" >
        sign_out = #{signOut,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bawei.pojo.Attendance" >
    update attendance
    set user_id = #{userId,jdbcType=VARCHAR},
      sign_in = #{signIn,jdbcType=TIMESTAMP},
      sign_out = #{signOut,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="findAttendanceList" resultMap="BaseResultMap">
    select *  from attendance
    <where>
      <if test="id!=null">
        and user_id=#{id}
      </if>
      <if test="signInStr!='' and signInStr!=null">
        and sign_in like '%${signInStr}%'
      </if>
      <if test="signOutStr!='' and signOutStr!=null">
        and sign_out like '%${signOutStr}%'
      </if>
    </where>
  </select>


  <select id="attendanceList" resultMap="BaseResultMap">
    select * from attendance
    <where>
          <if test="userId!=null">
             and user_id=#{userId}
          </if>
          <if test="signInStr!=null and signInStr!=''">
              and sign_in like '%${signInStr}%'
          </if>
          <if test="signOutStr!=null and signOutStr!=''">
            and  sign_out like '%${signOutStr}%'
          </if>
    </where>
  </select>
  <select id="attendanceLists" resultMap="BaseResultMap" >
    SELECT  * FROM attendance
   <where>
     <if test="id!=null">
      and user_id=#{id}
     </if>
     <if test="signInStr!=null and signInStr!=''">
       and  sign_in  like  '%${signInStr}%'
     </if>
     <if test="signOutStr!=null and signOutStr!=''">
       and  sign_out like  '%${signOutStr}%'
     </if>
   </where>
  </select>
<!--  like concat('%',#{signInStr},'%')concat('%',#{signOutStr},'%')-->

<select id="checkLoginIn" resultMap="BaseResultMap">
  SELECT  * FROM  attendance WHERE user_id=#{id} and sign_in LIKE concat('%',#{formatDate},'%')
</select>

</mapper>