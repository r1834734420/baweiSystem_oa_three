<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.1.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

 <!-- 扫描器 -->  
 <context:component-scan base-package="com.bawei.service"></context:component-scan>
 
 <!-- 打开aop-->
 <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
 
 <!-- 引入dbconfig配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>

 <!-- 配置数据源  -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
	</bean>

	<!-- 配置SqlSessionFactory-->
 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <!-- 把alibabaDruidDataSource注入给SqlSessionFactoryBean的 dataSource属性-->
      <property name="dataSource" ref="dataSource"></property>
      <!-- 把SqlMapperConfig.xml路径配置给SqlSessionFactoryBean的configLocation属性 -->
      <property name="configLocation" value="classpath:SqlMapperConfig.xml"></property>
 </bean>
 
 <!--MapperScannerConfigurer-->
 <!-- mapper接口的实现类的代理类的对象交给Spring容器管理了 -->
 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <property name="basePackage" value="com.bawei.mapper"></property>
 </bean>
 
 <!-- 注册事务管理者 -->
 <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	     <property name="dataSource" ref="dataSource"/>
 </bean>
    
 <!-- 采用注释的方式进行事务控制 
 <tx:annotation-driven transaction-manager="txManager"/>
 -->
 
 <!-- 切面 -->
 <aop:config>
	<aop:advisor advice-ref="txAdvice"
		pointcut="execution(* com.bawei.service..*.*(..))" />
 </aop:config>
 
 <!-- 通知 -->
<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 事务传播行为 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="NOT_SUPPORTED" read-only="true" />
			<tx:method name="find*" propagation="NOT_SUPPORTED" read-only="true" />
</tx:attributes>
	</tx:advice>
 
</beans>